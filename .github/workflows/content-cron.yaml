name: Export content to site from project repositories

on:
  schedule:
    - cron: '30 0 * * *'   # 00:30 UTC nightly
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: content-export
  cancel-in-progress: false

jobs:
  export:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare PR branch from main
        run: |
          git fetch origin --prune
          git checkout -B chore/content-nightly origin/main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build exporter image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: tools/Dockerfile.exporter
          load: true
          tags: content-export:local
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run exporter (container as host UID/GID)
        run: |
          uid="$(id -u)"; gid="$(id -g)"
          docker run --rm \
            -u "${uid}:${gid}" \
            -e HOME=/tmp \
            -e EXTERNAL_GIT_PAT="${{ secrets.EXTERNAL_GIT_PAT }}" \
            -v "${{ github.workspace }}:/site" \
            --entrypoint bash \
            content-export:local \
            -lc '
              if [ -n "$EXTERNAL_GIT_PAT" ]; then
                git config --global url."https://$EXTERNAL_GIT_PAT:@github.com/".insteadOf "https://github.com/"
              fi
              umask 002
              python tools/export_all.py
            '

      - name: Show diff (debug)
        run: |
          echo "== git status =="
          git status --porcelain
          echo "== name-only diff vs HEAD =="
          git diff --name-only

      - name: Commit & push changes (force-with-lease)
        id: commit
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A src/content
          changed=false
          if ! git diff --staged --quiet; then
            git commit -m "chore(content): nightly export"
            git push --force-with-lease -u origin chore/content-nightly
            changed=true
          else
            # still push branch pointer so next step can compare against origin
            git push --force-with-lease -u origin chore/content-nightly
            echo "No new changes this run."
          fi
          echo "changed=${changed}" >> "$GITHUB_OUTPUT"

      - name: Check if branch is ahead of main
        id: ahead
        run: |
          git fetch origin --prune
          if git ls-remote --exit-code --heads origin chore/content-nightly >/dev/null 2>&1; then
            # right count = commits only in branch vs main
            ahead=$(git rev-list --left-right --count origin/main...origin/chore/content-nightly | awk '{print $2}')
          else
            ahead=0
          fi
          echo "Branch ahead by: $ahead commits"
          echo "ahead=$ahead" >> "$GITHUB_OUTPUT"

      - name: Ensure PR exists / update (gh)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          gh auth status || true

          git fetch origin --prune
          ahead=$(git rev-list --left-right --count origin/main...origin/chore/content-nightly | awk '{print $2}')
          echo "Branch ahead of main by: $ahead commit(s)"
          if [ "$ahead" -eq 0 ]; then
            echo "No differences vs main; skipping PR."
            exit 0
          fi

          if gh pr view chore/content-nightly --repo "$GITHUB_REPOSITORY" >/dev/null 2>&1; then
            echo "PR already exists; nothing to create."
          else
            gh pr create \
              --base main \
              --head chore/content-nightly \
              --title "Content: nightly export" \
              --body  "Automated nightly export of blog/projects content."
          fi