name: Nightly Content Export (Docker)

on:
  schedule:
    - cron: '30 0 * * *'   # 00:30 UTC nightly
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: content-export
  cancel-in-progress: false

jobs:
  export:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # we need history to create/update the PR branch

      # Single moving PR branch: always base off latest main
      - name: Prepare PR branch from main
        run: |
          git fetch origin --prune
          git checkout -B chore/content-nightly origin/main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build exporter image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: tools/Dockerfile.exporter
          load: true
          tags: content-export:local
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Run exporter inside the container as the host UID/GID so files aren't root-owned
      - name: Run exporter (container)
        run: |
          uid="$(id -u)"
          gid="$(id -g)"
          docker run --rm \
            -u "${uid}:${gid}" \
            -e HOME=/tmp \
            -e EXTERNAL_GIT_PAT="${{ secrets.EXTERNAL_GIT_PAT }}" \
            -v "${{ github.workspace }}:/site" \
            --entrypoint bash \
            content-export:local \
            -lc '
              if [ -n "$EXTERNAL_GIT_PAT" ]; then
                git config --global url."https://$EXTERNAL_GIT_PAT:@github.com/".insteadOf "https://github.com/"
              fi
              umask 002
              python tools/export_all.py
            '

      - name: Commit & push changes (force-with-lease)
        id: commit
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add -A src/content
          changed=false
          if ! git diff --staged --quiet; then
            git commit -m "chore(content): nightly export"
            # Single moving branch; safe since only the bot uses it
            git push --force-with-lease -u origin chore/content-nightly
            changed=true
          else
            echo "No content changes; skipping commit."
          fi
          echo "changed=${changed}" >> "$GITHUB_OUTPUT"

      # Open or update the PR only when there were changes
      - name: Open / update PR
        if: steps.commit.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          base: main
          branch: chore/content-nightly
          title: "Content: nightly export"
          commit-message: "chore(content): nightly export"
          delete-branch: 
