---
import type { ImageMetadata } from 'astro';
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import PostTags from '~/components/blog/Tags.astro';

import { APP_BLOG } from 'astrowind:config';
import type { Post } from '~/types';

import { getPermalink } from '~/utils/permalinks';
import { findImage } from '~/utils/images';
import { getFormattedDate } from '~/utils/utils';

export interface Props { post: Post }

const { post } = Astro.props;
const image = (await findImage(post.image)) as ImageMetadata | undefined;
const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';
---

<article
  class={
  `class="relative group h-full rounded-lg border border-gray-200 dark:border-slate-700
         bg-white dark:bg-slate-900 shadow-sm hover:shadow-md transition-shadow
         p-4 md:p-5"`}
>
  <div class={`grid gap-3 md:gap-4 ${image ? 'md:grid-cols-[200px,1fr]' : ''}`}>
    {image ? (
      link ? (
        <a class="relative block overflow-hidden rounded-xl" href={link}>
          <div class="relative h-0 pb-[56.25%] md:h-36 bg-gray-200 dark:bg-slate-700">
            <Image
              src={image}
              class="absolute inset-0 object-cover w-full h-full transition-transform duration-200 group-hover:scale-[1.02]"
              widths={[400, 900]}
              width={900}
              sizes="(max-width: 900px) 400px, 900px"
              alt={post.title}
              aspectRatio="16:9"
              loading="lazy"
              decoding="async"
            />
          </div>
        </a>
      ) : (
        <div class="relative overflow-hidden rounded-xl h-0 pb-[56.25%] md:h-36 bg-gray-200 dark:bg-slate-700">
          {image && (
            <Image
              src={image}
              class="absolute inset-0 object-cover w-full h-full"
              widths={[400, 900]}
              width={900}
              sizes="(max-width: 900px) 400px, 900px"
              alt={post.title}
              aspectRatio="16:9"
              loading="lazy"
              decoding="async"
            />
          )}
        </div>
      )
    ) : null}

    <div class="min-w-0">
      <header>
        <div class="mb-1">
          <span class="text-[13px] leading-tight text-gray-600 dark:text-gray-300">
            <Icon name="tabler:clock" class="w-3.5 h-3.5 inline-block -mt-0.5 text-gray-500 dark:text-gray-400" />
            <time datetime={String(post.publishDate)} class="inline-block">{getFormattedDate(post.publishDate)}</time>
            {post.author && (
              <>
                {' '}· <Icon name="tabler:user" class="w-3.5 h-3.5 inline-block -mt-0.5 text-gray-500 dark:text-gray-400" />
                <span>{post.author.replaceAll('-', ' ')}</span>
              </>
            )}
            {post.category && (
              <>
                {' '}· <a class="hover:underline" href={getPermalink(post.category.slug, 'category')}>
                  {post.category.title}
                </a>
              </>
            )}
          </span>
        </div>

        <h2 class="text-lg sm:text-xl font-bold leading-snug mb-1 font-heading dark:text-slate-200 truncate">
          {link ? (
            <a class="inline-block hover:text-primary dark:hover:text-blue-600 transition-colors duration-150" href={link}>
              {post.title}
            </a>
          ) : post.title}
        </h2>
      </header>

      {post.excerpt && (
        <p class="text-base leading-snug text-muted dark:text-slate-400 line-clamp-3">
          {post.excerpt}
        </p>
      )}

      {post.tags && Array.isArray(post.tags) ? (
        <footer class="mt-3">
          <PostTags tags={post.tags} />
        </footer>
      ) : null}
    </div>
  </div>
</article>
