---
import { getCollection, getEntry } from 'astro:content';
import MarkdownLayout from '~/layouts/MarkdownLayout.astro';

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection('post', ({ data }) => !data.draft);
  return posts.map((p) => ({ params: { slug: p.slug } }));
}

const { slug } = Astro.params;
const post = await getEntry('post', slug);
if (!post) throw new Error(`No post found for slug "${slug}"`);

// Directly use explicit frontmatter links ({ title, url })
const prevLink = post.data.prev; // { title, url } | undefined
const nextLink = post.data.next; // { title, url } | undefined

const { Content } = await post.render();
---

<MarkdownLayout frontmatter={post.data}>
  <Content />

  {
    (!prevLink && !nextLink) ? (
      // Neither set -> single centered Back link
      <nav class="mt-12 pt-6 border-t border-gray-200 dark:border-slate-700 flex justify-center">
        <a href="/blog" class="group inline-flex items-center gap-2 hover:underline">
          ‚Üê Back to Blog
        </a>
      </nav>
    ) : (
      // One or both set -> render sides; missing side shows Back
      <nav class="mt-12 pt-6 border-t border-gray-200 dark:border-slate-700 flex flex-col sm:flex-row justify-between gap-4">
        {
          prevLink ? (
            <a href={prevLink.url} rel="prev" class="group max-w-[48%]">
              <div class="text-xs uppercase tracking-wide text-gray-500 dark:text-slate-400">Previous</div>
              <div class="text-base sm:text-lg font-medium group-hover:underline">{prevLink.title}</div>
            </a>
          ) : (
            <a href="/blog" class="group max-w-[48%]">
              <div class="text-xs uppercase tracking-wide text-gray-500 dark:text-slate-400">Back</div>
              <div class="text-base sm:text-lg font-medium group-hover:underline">Back to Blog</div>
            </a>
          )
        }
        {
          nextLink ? (
            <a href={nextLink.url} rel="next" class="group text-right max-w-[48%] sm:ml-auto">
              <div class="text-xs uppercase tracking-wide text-gray-500 dark:text-slate-400">Next</div>
              <div class="text-base sm:text-lg font-medium group-hover:underline">{nextLink.title}</div>
            </a>
          ) : (
            <a href="/blog" class="group text-right max-w-[48%] sm:ml-auto">
              <div class="text-xs uppercase tracking-wide text-gray-500 dark:text-slate-400">Back</div>
              <div class="text-base sm:text-lg font-medium group-hover:underline">Back to Blog</div>
            </a>
          )
        }
      </nav>
    )
  }
</MarkdownLayout>
